#include "mlast.h"
double mlast(double s, double s1, double s2, double t1, double t2) 
{
	return 	(8*pow((ga + gv),2)*(-((12*pow(m,10)*mz*mz - pow(m,8)*(pow(mz,4) + 2*mz*mz*(9*s + 3*s1 - 2*s2 + 2*t1 - 5*t2) + 3*pow((s - s1 + t2),2)) - s*s1*(-2*pow(mz,8) + s1*(s - s2 + t1)*pow((s - s1 + t2),2) + 2*pow(mz,6)*(2*s + s2 + t1 + t2) - 2*mz*mz*(s - s1 + t2)*(-2*s1*s1 + s*(s1 - 2*s2 + t1 - t2) - t2*(s2 - t1 + t2) + s1*(-2*t1 + 3*t2)) - pow(mz,4)*(4*s*s + 2*s1*s1 + s1*(-3*s2 + 3*t1 - 4*t2) + 2*t2*(2*s2 + t2) + s*(-s1 + 4*s2 + 2*t1 + 4*t2))) + pow(m,6)*(16*pow(mz,6) + (6*s1 - 3*s2 + t1)*pow((s - s1 + t2),2) - pow(mz,4)*(42*s - 12*s1 + 3*s2 + 5*t1 + 16*t2) + 2*mz*mz*(16*s*s + s1*(-6*s2 + t1) + (4*s2 + t1)*t2 + s*(-8*s1 + 5*t1 + 6*t2))) + pow(m,4)*(18*pow(mz,8) - (s*s + s*(-s2 + t1) + s1*(3*s1 - 6*s2 + 2*t1))*pow((s - s1 + t2),2) - 2*pow(mz,6)*(22*s - 8*s1 + 3*s2 + t1 + 15*t2) + pow(mz,4)*(47*s*s + 3*s1*s1 + s1*(-6*s2 + 8*t1 - 20*t2) + 6*t2*(2*s2 + 3*t2) + s*(-14*s1 + 13*s2 + 7*t1 + 36*t2)) - 2*mz*mz*(7*pow(s,3) + s*s*(3*s1 + 4*s2 + 2*t1 + 4*t2) + s*(-5*s1*s1 + t2*(9*s2 - t1 + 2*t2) + s1*(-6*s2 + 7*t1 + 2*t2)) - (s1 - t2)*(s1*s1 + s1*(4*s2 + 3*t1 - 5*t2) + t2*(3*s2 - t1 + 3*t2)))) + m*m*(-6*pow(mz,8)*(s + s1) + s1*(2*s*s - 2*s*s2 - 3*s1*s2 + 2*s*t1 + s1*t1)*pow((s - s1 + t2),2) + 2*pow(mz,6)*(8*s*s + s*(10*s1 + s2 + t1 + 3*t2) + s1*(-2*s1 + 3*s2 + t1 + 5*t2)) - pow(mz,4)*(20*pow(s,3) + s*s*(-2*s1 + 4*s2 + 2*t1 + 20*t2) + s1*(-2*s1*s1 + s1*(-9*s2 + 3*t1 - 4*t2) + 6*t2*(2*s2 + t2)) + 2*s*(-3*s1*s1 + t2*(2*s2 + 3*t2) + s1*(5*s2 + 5*t1 + 8*t2))) + 2*mz*mz*(4*pow(s,4) - pow(s,3)*(10*s1 - 2*s2 + t1 - 9*t2) + s1*(s1 - t2)*((-3*s2 + t1 - t2)*t2 + s1*(-2*t1 + t2)) + s*s*(14*s1*s1 + s1*(2*s2 + 5*t1 - 17*t2) + t2*(3*s2 - 2*t1 + 8*t2)) + s*(-6*pow(s1,3) + 2*s1*(4*s2 + t1 - 3*t2)*t2 + t2*t2*(s2 - t1 + 3*t2) + s1*s1*(-6*s2 + 9*t2)))))/(pow((m*m - s),2)*pow((m*m - s1),2)*pow((mz*mz - s + s1 - t2),2))) + (-8*pow(m,10)*mz*mz - 2*pow(m,8)*(pow(mz,4) + 2*mz*mz*(-9*s + s1 + s2) - pow((-s + s1 + s2),2)) + pow(m,6)*(2*pow(mz,6) - pow((-s + s1 + s2),2)*(8*s - 3*s2 - t2) + pow(mz,4)*(12*s - 4*s1 + s2 - 8*t1 + 7*t2) - 2*mz*mz*(29*s*s + 5*s1*s1 + 3*s2*s2 - 10*s*(s1 + s2) - 4*s2*t1 + 6*t1*t1 + 2*s1*(s2 + 4*t1 - 4*t2) + 4*s2*t2 - 12*t1*t2 + 6*t2*t2)) + s*(s1 + t1 - t2)*(2*pow(mz,6)*t1 + pow((-s + s1 + s2),2)*(-(s1*s2) + 3*s1*t1 + s2*t1 + t1*t1 + s*(2*s1 - t1 - t2) + s2*t2 - t1*t2) + pow(mz,4)*(2*s*s + 2*s1*s1 + s2*t1 - t1*t1 - s*(6*s1 + 2*s2 + t1 - 3*t2) + s1*(3*s2 - t1 - 2*t2) - 3*s2*t2 + t1*t2) + 2*mz*mz*(2*pow(s,3) - 2*pow(s1,3) - s1*(s2*s2 + s2*(6*t1 - 4*t2) + pow((t1 - t2),2)) + s*(4*s1*s1 + s2*s2 + s1*(4*s2 + 6*t1 - 4*t2) + s2*(4*t1 - 2*t2) + pow((t1 - t2),2)) - s2*(pow((t1 - t2),2) + s2*(2*t1 - t2)) + s*s*(-4*s1 - 3*s2 - 2*t1 + t2) + s1*s1*(-3*s2 - 4*t1 + 3*t2))) + pow(m,4)*(-2*pow(mz,6)*(s + s1 - t2) + pow((-s + s1 + s2),2)*(10*s*s + 2*s1*s1 - 4*s2*t1 + 3*t1*t1 + s1*(-6*s2 + 7*t1 - 3*t2) + 6*s2*t2 - 4*t1*t2 + t2*t2 - s*(s2 + 3*t1 + 2*t2)) - pow(mz,4)*(20*s*s + 4*s1*s1 - 2*s2*t1 + 3*t1*t1 + s1*(-4*s2 + 9*t1 - 5*t2) + 4*s2*t2 - 4*t1*t2 + t2*t2 + s*(-12*s1 + 5*s2 - 21*t1 + 16*t2)) + 2*mz*mz*(9*pow(s,3) + pow(s1,3) + s2*s2*t1 - 3*s2*t1*t1 + 2*pow(t1,3) + s*s*(11*s1 - 11*s2 + 21*t1 - 22*t2) + s1*s1*(s2 + t1 - 2*t2) - 2*s2*s2*t2 + 6*s2*t1*t2 - 6*t1*t1*t2 - 3*s2*t2*t2 + 6*t1*t2*t2 - 2*pow(t2,3) + s1*(2*s2*s2 + 3*pow((t1 - t2),2) + s2*(-4*t1 + 2*t2)) + s*(-5*s1*s1 + 4*s2*s2 - 2*s1*(s2 + 3*t1 - 4*t2) + pow((t1 - t2),2) + s2*(-8*t1 + 10*t2)))) + m*m*(2*pow(mz,6)*(s*(s1 - t2) - t1*(s1 + t1 - t2)) - pow((-s + s1 + s2),2)*(s*s*(8*s1 + 5*t1 - 9*t2) + (s1 + t1 - t2)*(-3*s1*s2 + 3*s1*t1 - s2*t1 + t1*t1 + 3*s2*t2 - t1*t2) - 2*s*(t1*t1 + s1*(s2 - t2) - s2*t2 - 2*t1*t2 + t2*t2)) + pow(mz,4)*(-6*pow(s,3) - 2*s*(7*s1*s1 + s1*(3*s2 + 12*t1 - 13*t2) + s2*(2*t1 - 3*t2) + 6*pow((t1 - t2),2)) + s*s*(26*s1 + 6*s2 + 17*t1 - 21*t2) + (s1 + t1 - t2)*(2*s1*s1 + t1*(t1 - t2) + s2*(t1 + t2) - s1*(s2 - 5*t1 + 2*t2))) - 2*mz*mz*(4*pow(s,4) - pow(s,3)*(3*s1 + 7*s2 - 3*t1 + 4*t2) + s*s*(6*s1*s1 + 3*s2*s2 + 3*t1*t1 + s1*(5*s2 + 8*t1 - 7*t2) - 7*t1*t2 + 4*t2*t2 + s2*(t1 + t2)) - s*(3*pow(s1,3) + s1*s1*(7*s2 + t1 - 2*t2) - 3*pow((t1 - t2),3) + s2*s2*(2*t1 - t2) + s1*(s2*s2 - 6*t1*t1 + 12*s2*(t1 - t2) + 10*t1*t2 - 4*t2*t2) + s2*(3*t1*t1 - 8*t1*t2 + 5*t2*t2)) - (s1 + t1 - t2)*(s1*(-s2*s2 + 2*s2*t1 + pow((t1 - t2),2)) - s1*s1*(s2 - 2*t1 + t2) + s2*(t1*t1 - 2*t1*t2 + t2*(s2 + t2))))))/(pow((m*m - s),2)*pow((mz*mz + s - s1 - s2),2)*pow((m*m - s1 - t1 + t2),2)) - (2*(-16*pow(m,10)*mz*mz - 4*pow(m,8)*(5*pow(mz,4) - pow((s - s1 + t2),2) + mz*mz*(-7*s - s1 + s2 - 5*t1 + 2*t2)) + pow(m,6)*(23*pow(mz,6) + pow(mz,4)*(s + 39*s1 - 14*s2 + 13*t1 - 45*t2) - (3*s + 5*s1 - 4*s2 + 5*t1 - t2)*pow((s - s1 + t2),2) + mz*mz*(-15*s*s + 9*s1*s1 + 4*s2*t1 - 4*t1*t1 - 2*s*(5*s1 - 6*s2 + 11*t1 - 11*t2) + 4*s2*t2 + 6*t1*t2 + 13*t2*t2 - 2*s1*(2*s2 + t1 + 11*t2))) + m*m*(2*pow(mz,10) + pow(mz,8)*(-4*s + 4*s1 - 4*s2 + 2*t1 - 8*t2) + pow(mz,6)*(2*s*s + 2*s1*s1 + 2*s2*s2 - 2*s2*t1 + 5*t1*t1 + s1*(-9*s2 + 8*t1 - 10*t2) + 6*s2*t2 - 7*t1*t2 + 10*t2*t2 + 3*s*(s1 + 2*s2 - t1 + 2*t2)) + pow((s - s1 + t2),2)*(s1*s1*s2 + s*s*(s1 - t1) + s2*t1*(-s2 + t1) - s*(s1*s1 + t1*(-2*s2 + t1) + s1*(s2 - t2)) + s1*(s2*t1 - s2*t2 + t1*t2)) + pow(mz,4)*(6*pow(s,3) - 2*pow(s1,3) - 5*s1*s1*(3*s2 - 2*t1) - 3*s2*s2*t1 + 2*pow(t1,3) - s2*s2*t2 + 9*s2*t1*t2 - 13*t1*t1*t2 - 6*s2*t2*t2 + 11*t1*t2*t2 - 5*pow(t2,3) + s*s*(-17*s1 - 6*s2 + 9*t1 + 10*t2) + s1*(s2*s2 - 12*s2*t1 + 14*t1*t1 + 21*s2*t2 - 24*t1*t2 + 7*t2*t2) + s*(13*s1*s1 - 3*s2*s2 + s2*t1 - t1*t1 + s1*(11*s2 - 10*t1 - 23*t2) - 6*s2*t2 + t1*t2 + 7*t2*t2)) - mz*mz*(s - s1 + t2)*(6*pow(s,3) - 2*pow(s1,3) - 4*s2*s2*t1 + s2*t1*t1 + 2*pow(t1,3) + s2*s2*t2 + 7*s2*t1*t2 - 8*t1*t1*t2 - 4*s2*t2*t2 + 6*t1*t2*t2 - pow(t2,3) + s1*s1*(-9*s2 + 4*t1 + 2*t2) + s*s*(-11*s1 - 4*s2 + 5*t1 + 10*t2) + s1*(-s2*s2 - 9*s2*t1 + 9*t1*t1 + 13*s2*t2 - 12*t1*t2 + t2*t2) + s*(7*s1*s1 - s2*s2 + 3*s2*t1 + t1*t1 + s1*(5*s2 - 3*t1 - 17*t2) - 4*s2*t2 - 3*t1*t2 + 9*t2*t2))) + (mz*mz - s + s1 - t2)*(-(s1*(-s + s1 + s2)*t1*(s - s2 + t1)*(-s + s1 - t2)) + pow(mz,4)*t1*(s*(s1 + s2 - t1) + t1*t1 + 2*s2*t2 - 2*t1*t2 + t2*t2 - s1*(s2 - 2*t1 + t2)) - mz*mz*(-2*pow(s1,3)*s2 + 2*pow(s,3)*(s1 + t1) - s1*s1*(5*s2 - t1)*(t1 - t2) + s2*t2*(t1*t1 + t2*t2) - s*s*(4*s1*s1 - t1*t1 + s1*(4*t1 - 6*t2) - 3*t1*t2 + 2*t2*t2 + s2*(t1 + t2)) + s*(2*pow(s1,3) + pow(t1,3) + 2*s1*s1*(s2 + t1 - 3*t2) - t1*t1*t2 + t1*t2*(-s2 + t2) - s1*(s2*s2 - 5*s2*t1 + 4*s2*t2 + 3*t1*t2 - 5*t2*t2) + t2*(s2*s2 + 2*s2*t2 - t2*t2)) + s1*(-(s2*s2*t1) + t1*(t1*t1 - t1*t2 + t2*t2) - 2*s2*(t1*t1 - 2*t1*t2 + 2*t2*t2)))) + pow(m,4)*(16*pow(mz,8) - pow(mz,6)*(27*s - 13*s1 + 9*s2 + 18*t1 + 28*t2) - pow((s - s1 + t2),2)*(s*s - s1*s1 + 2*s2*t1 - t1*t1 - s*(4*s1 + s2 + t1 - t2) - s2*t2 + t1*t2 + s1*(5*s2 - 5*t1 + t2)) + pow(mz,4)*(-3*s*s - 9*s1*s1 + s2*s2 + 14*s2*t1 - 7*t1*t1 + 5*s2*t2 + 35*t1*t2 + 13*t2*t2 - s1*(7*s2 + 23*t1 + 3*t2) + s*(-8*s1 + 31*s2 - 15*t1 + 45*t2)) + mz*mz*(13*pow(s,3) - s*s*(21*s1 + 21*s2 - 24*t1 + 2*t2) - (s1 - t2)*(7*s1*s1 + 5*s1*s2 - s2*s2 - 10*s2*t1 + 4*t1*t1 - 7*s1*t2 + s2*t2 - 14*t1*t2 - t2*t2) + s*(15*s1*s1 - s2*s2 - 2*s2*(7*t1 + 8*t2) + 2*(4*t1*t1 + t1*t2 - 6*t2*t2) + s1*(22*s2 - 4*(5*t1 + t2)))))))/((m*m - s)*(m*m - s1)*(m*m - s + s2 - t1)*pow((mz*mz - s + s1 - t2),2)*(m*m - s1 - t1 + t2)) - (2*(-4*pow(m,10)*mz*mz + pow(m,8)*(5*pow(mz,4) + (s - s1 - s2)*(s - s1 + t2) + mz*mz*(2*s + 6*s1 + 3*s2 - 10*t1 + 9*t2)) + pow(m,6)*(13*pow(mz,6) + pow(mz,4)*(-39*s + 29*s1 + 4*s2 + 13*t1 - 29*t2) - (s - s1 - s2)*(s - s1 + t2)*(3*s - s1 + 3*s2 - 3*t1 + 2*t2) + mz*mz*(25*s*s - 7*s1*s1 - 3*s2*s2 - 12*s2*t1 + 10*t1*t1 + 9*s2*t2 - 16*t1*t2 + 13*t2*t2 + 2*s*(-9*s1 + s2 + t1 + 4*t2) - 2*s1*(10*s2 - 5*t1 + 7*t2))) - pow(m,4)*(pow(mz,6)*(17*s + 3*s1 - 4*s2 + 5*t1) + (s - s1 - s2)*(s - s1 + t2)*(2*s*s + 2*s1*s1 - 2*s2*t1 + t1*t1 + s1*(-6*s2 + 5*t1 - 2*t2) - s*(4*s1 + s2 + t1 - t2) + 3*s2*t2 - t1*t2) + pow(mz,4)*(-34*s*s + 2*s1*s1 - s2*s2 + s2*t1 + s*(24*s1 + 10*s2 - t1 - 16*t2) + s1*(s2 + 7*t1 - 5*t2) + s2*t2 - 5*t1*t2 + t2*t2) + mz*mz*(13*pow(s,3) - pow(s1,3) - 4*s2*t1*t1 + 2*pow(t1,3) + s*s*(21*s1 + 9*s2 + 11*t1 - 7*t2) + 2*s2*s2*t2 + 7*s2*t1*t2 - 4*t1*t1*t2 - 3*s2*t2*t2 + 3*t1*t2*t2 + s1*s1*(-5*s2 + t1 + 3*t2) - s1*(5*s2*s2 + 8*s2*t1 - 5*t1*t1 - 5*s2*t2 + 2*t1*t2 + 2*t2*t2) + s*(-25*s1*s1 - 2*s2*s2 - 19*s2*t1 + 11*t1*t1 + 14*s2*t2 - 9*t1*t2 + 4*t2*t2 + 4*s1*(-8*s2 + t2)))) + m*m*(pow(mz,6)*(-5*s2*t1 + s1*(-6*s2 + t1) + s*(9*s1 + 11*t1 - 6*t2) + 6*s2*t2 - t1*t2) + (s - s1 - s2)*(s - s1 + t2)*(s*s*(3*s1 - t2) + s1*(-3*s1*s2 + 2*s1*t1 - 2*s2*t1 + t1*t1 + 3*s2*t2 - t1*t2) + s*(-s1*s1 + t1*t1 + s2*t2 - t1*t2 + s1*(-2*s2 + t1 + t2))) - pow(mz,4)*(8*pow(s,3) + s1*s1*(s2 - 2*t1) + pow(t1,3) + s*s*(9*s1 - 8*s2 + 10*t1 - 11*t2) + s2*s2*t2 - 5*s2*t1*t2 + 5*s2*t2*t2 - 2*t1*t2*t2 - s1*(s2*s2 - 3*s2*t1 + 2*t1*t1 + 6*s2*t2 - 5*t1*t2) + s*(-11*s1*s1 + s2*s2 - s2*t1 + 2*s2*t2 + 7*t1*t2 - 6*t2*t2 + s1*(-3*s2 - 17*t1 + 18*t2))) + mz*mz*(6*pow(s,4) - pow(s1,3)*t1 + pow(s,3)*(3*s1 - 4*s2 + 5*t1 + 4*t2) + s2*t2*(t1*t1 + s2*t2 - 2*t1*t2) + s*s*(-4*s1*s1 - s2*s2 + t1*t1 + s1*(4*s2 + 3*t1 - 6*t2) - 10*s2*t2 - 2*t1*t2 + 4*t2*t2) + s1*s1*(-2*s2*s2 - 3*s2*(t1 + t2) + t1*(t1 + 3*t2)) + s1*(s2*s2*(-2*t1 + t2) + t1*(t1*t1 - t1*t2 - t2*t2) + s2*(-2*t1*t1 + 4*t1*t2 + 3*t2*t2)) + s*(-pow(s1,3) + s1*s1*(-14*s2 + 5*t1) + s2*s2*(2*t1 + t2) + s2*(-4*t1*t1 + 10*t1*t2 - 11*t2*t2) + s1*(-2*s2*s2 - 15*s2*t1 + 8*t1*t1 + 24*s2*t2 - 15*t1*t2 + t2*t2) + t1*(3*t1*t1 - 5*t1*t2 + 5*t2*t2)))) + s*(-(s1*(-s + s1 + s2)*(-s + s1 - t2)*(-(s1*s2) + 2*s1*t1 + t1*t1 + s*(s1 - t2) + s2*t2 - t1*t2)) + pow(mz,6)*(2*s1*s2 - s1*t1 + s2*t1 - 2*s*(s1 + t1 - t2) - 2*s2*t2 + t1*t2) + pow(mz,4)*(pow(t1,3) - s1*s1*(s2 + 2*t1) + s*s*(4*s1 + 4*t1 - 2*t2) + s2*s2*t2 - s2*t1*t2 + s2*t2*t2 - 2*t1*t2*t2 + s1*(-s2*s2 + s2*t1 - 2*t1*t1 + 5*t1*t2) - s*(s1*s1 + 2*s2*t1 + s1*(2*s2 + 2*t1 - t2) - s2*t2 + 2*t1*t2 + t2*t2)) + mz*mz*(pow(s1,3)*t1 - 2*pow(s,3)*(s1 + t1) - s2*t2*(t1*t1 + s2*t2 - 2*t1*t2) + s*s*(2*s1*s1 + 3*s1*t1 + s2*(t1 + t2) - t2*(3*t1 + t2)) + s1*s1*(s2*(3*t1 + t2) - t1*(t1 + 3*t2)) + s1*(s2*s2*t2 + s2*(2*t1*t1 - 6*t1*t2 - t2*t2) + t1*(-t1*t1 + t1*t2 + t2*t2)) + s*(-pow(t1,3) + s1*s1*(s2 - 4*t1 - t2) + t1*t1*t2 - s2*(s2 - 2*t2)*t2 + t1*(3*s2 - 2*t2)*t2 + s1*(s2*s2 - 3*t1*t1 + 9*t1*t2 + t2*t2 - s2*(t1 + 3*t2)))))))/(pow((m*m - s),2)*(m*m - s1)*(mz*mz + s - s1 - s2)*(mz*mz - s + s1 - t2)*(m*m - s1 - t1 + t2)) - (2*(12*pow(m,10)*mz*mz + pow(m,8)*(17*pow(mz,4) - 3*(s - s1 - s2)*(s - s1 + t2) - mz*mz*(38*s + 2*s1 - 3*s2 + 10*t1 + 15*t2)) + pow(m,6)*(-7*pow(mz,6) + (s - s1 - s2)*(11*s - s1 - 3*s2 + t1)*(s - s1 + t2) + pow(mz,4)*(-41*s - 5*s1 + 3*(6*s2 - 3*t1 + t2)) + mz*mz*(37*s*s + 21*s1*s1 - 8*s2*s2 + 2*s2*t1 - 10*t1*t1 - 7*s2*t2 + 18*t1*t2 - 6*t2*t2 - 2*s1*(s2 - 9*t1 + 8*t2) + s*(-10*s1 + 34*t1 + 26*t2))) - pow(m,4)*(pow(mz,6)*(7*s - 3*(5*s1 + s2 + 5*t1 - 5*t2)) + pow(mz,4)*(-16*s*s - 12*s1*s1 + 4*s2*s2 + 25*s2*t1 - 10*t1*t1 - 20*s2*t2 + 23*t1*t2 - 17*t2*t2 + s*(-16*s1 + 5*s2 - 37*t1 + t2) + s1*(24*s2 - 21*t1 + 32*t2)) + (s - s1 + t2)*(8*pow(s,3) - s1*s1*(s2 - t1 + t2) - s*s*(4*s1 + 16*s2 - 9*t1 + 6*t2) - s1*(s2*s2 + 2*s2*t1 - 3*t1*t1 + s2*t2 + 2*t1*t2 - t2*t2) + s2*(-3*s2*t1 + 3*t1*t1 - 2*t1*t2 + t2*t2) - s*(4*s1*s1 - 8*s2*s2 + 6*s2*t1 + 3*t1*t1 + s1*(-5*s2 + 10*t1 - 7*t2) - 6*s2*t2 - 2*t1*t2 + t2*t2)) + mz*mz*(-pow(s,3) + 17*pow(s1,3) - 12*s2*s2*t1 + 14*s2*t1*t1 - 10*pow(t1,3) + s1*s1*(4*s2 + 35*t1 - 30*t2) + s*s*(27*s1 + 10*s2 + 25*t1 - 8*t2) + 8*s2*s2*t2 - 21*s2*t1*t2 + 12*t1*t1*t2 + 11*s2*t2*t2 - 5*t1*t2*t2 + 2*pow(t2,3) + s1*(-7*s2*s2 + 9*s2*t1 + 11*t1*t1 - 14*s2*t2 - 31*t1*t2 + 11*t2*t2) - s*(19*s1*s1 + 9*s2*s2 - 4*s2*t1 - 13*t1*t1 + 10*s1*(s2 - 3*t2) + s2*t2 - 16*t1*t2 + 14*t2*t2))) + (s1 + t1 - t2)*(-((s - s1 - s2)*(s - s2 + t1)*(s*(s1 - t1) + (s1 + s2)*t1)*(s - s1 + t2)) + pow(mz,6)*(s*(2*s1 + t1) + t1*(-t1 + t2)) + pow(mz,4)*(-2*s1*s1*s2 - 2*s2*s2*t1 - 2*s2*t1*t1 + s2*s2*t2 + 4*s2*t1*t2 + t1*t1*t2 - s2*t2*t2 - t1*t2*t2 + s*s*(-s1 + t1 + 2*t2) + s1*(-s2*s2 - 7*s2*t1 + t1*t1 + 3*s2*t2) + s*(4*s1*s1 + 2*s2*t1 + 6*t1*t1 + s1*(s2 + 8*t1 - 6*t2) - 3*s2*t2 - 3*t1*t2 + t2*t2)) + mz*mz*(-2*pow(s1,3)*s2 + pow(s,3)*t1 - s*s*(2*s1*s1 + s2*t1 + 2*t1*t1 + s1*(s2 + 8*t1 - 5*t2) - 6*t1*t2 + 3*t2*t2) - s1*s1*(s2*s2 + s2*(2*t1 - 5*t2) + t1*(-t1 + t2)) + s1*(t1*t2*(-2*t1 + t2) + 2*s2*s2*(t1 + t2) + s2*(-2*t1*t1 + 5*t1*t2 - 4*t2*t2)) + s2*(s2*s2*t1 - 2*pow(t1,3) + 2*t1*t1*t2 - 2*t1*t2*t2 + pow(t2,3) + s2*(t1*t1 - t2*t2)) + s*(2*pow(s1,3) - s2*s2*t1 + s1*s1*(4*s2 + 5*t1 - 6*t2) - 6*s2*t1*t2 + 4*s2*t2*t2 + t1*t2*t2 - pow(t2,3) + s1*(s2*s2 + 5*s2*t1 - t1*t1 - 7*s2*t2 - 7*t1*t2 + 5*t2*t2)))) + m*m*(pow(mz,6)*(-4*s1*s1 - 3*(s2 + t1)*(t1 - t2) + s*(s1 + 2*t1 + t2) + s1*(-3*s2 - 8*t1 + 4*t2)) + (s - s1 - s2)*(s - s1 + t2)*(s1*s1*t1 - s2*s2*t1 + 3*s2*t1*t1 - pow(t1,3) + s*s*(5*s1 + 3*t1 - 6*t2) - 3*s2*t1*t2 + 2*t1*t1*t2 + s2*t2*t2 - t1*t2*t2 + s1*(s2*t1 + t1*t1 - s2*t2) + s*(s1*s1 - 5*s1*s2 + 5*s1*t1 - 2*s2*t1 + t1*t1 + 6*s2*t2 - 3*t1*t2 - t2*t2)) - pow(mz,4)*(-6*s2*s2*t1 - 13*s2*t1*t1 + 2*pow(t1,3) + s1*s1*(-12*s2 + t1 - 4*t2) + s*s*(7*s1 + 9*t1 - 4*t2) + 5*s2*s2*t2 + 19*s2*t1*t2 - 2*t1*t1*t2 - 5*s2*t2*t2 + t1*t2*t2 - pow(t2,3) + s*(11*s1*s1 + 35*s1*t1 + s2*t1 + 26*t1*t1 - 13*s1*t2 - 21*t1*t2 + t2*t2) + s1*(-5*s2*s2 - 28*s2*t1 + 4*t1*t1 + 17*s2*t2 - 6*t1*t2 + 5*t2*t2)) + mz*mz*(2*pow(s1,4) - pow(s2,3)*t1 - 9*s2*s2*t1*t1 + 11*s2*pow(t1,3) - 2*pow(t1,4) + pow(s1,3)*(s2 + 8*t1 - 4*t2) + 10*s2*s2*t1*t2 - 17*s2*t1*t1*t2 + pow(t1,3)*t2 - s2*s2*t2*t2 + 9*s2*t1*t2*t2 + 4*t1*t1*t2*t2 - 2*s2*pow(t2,3) - 2*t1*pow(t2,3) - pow(t2,4) + pow(s,3)*(-s1 - 2*t1 + t2) + s*s*(8*s1*s1 + 7*s2*t1 + 6*t1*t1 + s1*(7*s2 + 18*t1 - 6*t2) - 8*s2*t2 - 5*t1*t2 - 4*t2*t2) + s1*s1*(-2*s2*s2 + 10*t1*t1 - 5*s2*t2 - 16*t1*t2 + t2*t2) + s1*(3*pow(t1,3) - 13*t1*t1*t2 + 10*t1*t2*t2 + 2*pow(t2,3) + s2*s2*(-13*t1 + 3*t2) + s2*(10*t1*t1 - 11*t1*t2 + 6*t2*t2)) + s*(-5*pow(s1,3) + pow(t1,3) + 3*t1*t1*t2 - t1*t2*t2 - 5*pow(t2,3) + s2*s2*(-4*t1 + 7*t2) + s1*s1*(-6*s2 - 4*t1 + 7*t2) + s2*(8*t1*t1 - 5*t1*t2 - t2*t2) + s1*(-6*s2*s2 + 6*t1*t1 + 5*t1*t2 + 3*t2*t2 + s2*(t1 + 8*t2)))))))/((m*m - s)*(mz*mz + s - s1 - s2)*(m*m - s + s2 - t1)*(mz*mz - s + s1 - t2)*pow((m*m - s1 - t1 + t2),2)) - (2*(-(m*m*(2*m*m - t1)*(4*mz*mz*(mz*mz - s + s1 - t2)*pow((m*m - s1 - t1 + t2),2) - pow((s - s1 + t2),2)*pow((m*m - s1 - t1 + t2),2) + mz*mz*(3*(mz*mz - s2)*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + mz*mz*pow((m*m - s1 - t1 + t2),2) + 2*m*m*(pow((mz*mz - s + s1 - t2),2) + 2*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + 2*pow((m*m - s1 - t1 + t2),2))) - 2*(-m*m + s1 + t1 - t2)*(s - s1 + t2)*(m*m*mz*mz + (-5*pow(mz,4) - s2*(s - s1 + t2) + mz*mz*(5*s - 7*s1 + s2 - 2*t1 + 7*t2))/2))) + ((-m*m + s)*(m*m + s - s2 + t1)*(4*mz*mz*(mz*mz - s + s1 - t2)*pow((m*m - s1 - t1 + t2),2) - pow((s - s1 + t2),2)*pow((m*m - s1 - t1 + t2),2) + mz*mz*(3*(mz*mz - s2)*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + mz*mz*pow((m*m - s1 - t1 + t2),2) + 2*m*m*(pow((mz*mz - s + s1 - t2),2) + 2*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + 2*pow((m*m - s1 - t1 + t2),2))) - 2*(-m*m + s1 + t1 - t2)*(s - s1 + t2)*(m*m*mz*mz + (-5*pow(mz,4) - s2*(s - s1 + t2) + mz*mz*(5*s - 7*s1 + s2 - 2*t1 + 7*t2))/2)))/2 + 2*(((-m*m + s1 + t1 - t2)*pow((s - s1 + t2),2)*(2*m*m*(4*pow(m,4) - (mz*mz - s + s1 - t2)*(mz*mz + s1 - s2 + t1 - t2) + m*m*(3*mz*mz - 3*s - s1 - 4*t1 + t2)) + (m*m - s + s2 - t1)*(4*pow(m,4) + (mz*mz - s + s1 - t2)*(mz*mz - s2 + t1 - t2) + 2*m*m*(mz*mz - s - s1 - 2*t1 + t2))))/4 + (s - s1 + t2)*(((-m*m + s - s2 + t1)*((mz*mz*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2)*(mz*mz - s2 + t1 - t2))/2 + m*m*(5*mz*mz - 2*s2)*(mz*mz - s + s1 - t2)*(m*m - s1 - t1 + t2) + (mz*mz - t2)*(m*m*(m*m + mz*mz - s - t1)*(mz*mz - s + s1 - t2) - mz*mz*pow((m*m - s1 - t1 + t2),2))))/2 + m*m*(-(m*m*(s - s1 - s2)*pow((mz*mz - s + s1 - t2),2)) + 3*m*m*mz*mz*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + (mz*mz*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2)*(mz*mz - s2 + t1 - t2))/2 + (mz*mz*(m*m - s1)*(mz*mz - s + s1 - t2)*(m*m - s1 - t1 + t2))/2 - 2*m*m*(mz*mz - s2)*(mz*mz - s + s1 - t2)*(m*m - s1 - t1 + t2) + m*m*(s - s1 - s2)*(-mz*mz + s - s1 + t2)*(m*m - s1 - t1 + t2) + mz*mz*(s - s1 - s2)*pow((m*m - s1 - t1 + t2),2) + (mz*mz - t2)*(m*m*(m*m + mz*mz - s - t1)*(mz*mz - s + s1 - t2) - mz*mz*pow((m*m - s1 - t1 + t2),2)))) - ((mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2)*(2*m*m*(8*pow(m,4)*mz*mz - (mz*mz - s + s1 - t2)*(2*mz*mz - s + s1 + s2 - t2)*(mz*mz + s1 - s2 + t1 - t2) + m*m*(8*pow(mz,4) + mz*mz*(-9*s + s1 + s2 - 8*t1 - t2) + (s - s1 + t2)*(s - s1 - s2 + t2))) + (m*m - s + s2 - t1)*(8*pow(m,4)*mz*mz + m*m*(5*pow(mz,4) - mz*mz*(5*s + 3*s1 + 8*t1 - 4*t2) - t2*(s - s1 + t2)) + (mz*mz - s + s1 - t2)*(2*pow(mz,4) + mz*mz*(s1 - 2*s2 + 2*t1 - 3*t2) + t2*(-s1 + s2 - t1 + t2)))))/4 + 2*m*m*((m*m*(8*pow(m,6)*mz*mz + 2*pow(mz,8) + s2*pow((s - s1 + t2),2)*(s - s1 - s2 + t2) + 2*pow(m,4)*mz*mz*(5*mz*mz - 2*s - 6*s1 - s2 - 8*t1 + 6*t2) - pow(mz,6)*(5*s - 7*s1 + s2 - 2*t1 + 7*t2) + m*m*mz*mz*(4*pow(mz,4) + 6*s*s + 10*s1*s1 + 7*s1*s2 + 12*s1*t1 + 4*s2*t1 + 8*t1*t1 - 20*s1*t2 - 7*s2*t2 - 12*t1*t2 + 10*t2*t2 + mz*mz*(-10*s - 6*s1 + 3*s2 - 16*t1 + 6*t2) + s*(-8*s1 - 3*s2 + 4*t1 + 8*t2)) + pow(mz,4)*(4*s*s + 12*s1*s1 - s2*s2 - 3*s2*t1 + 6*t1*t1 + 6*s2*t2 - 14*t1*t2 + 12*t2*t2 + s*(-10*s1 + 3*s2 - 2*t1 + 10*t2) - 2*s1*(3*s2 - 7*t1 + 12*t2)) - mz*mz*(pow(s,3) - pow(s1,3) + 2*s2*t1*t1 - 2*s2*s2*t2 - 7*s2*t1*t2 + 8*s2*t2*t2 + pow(t2,3) + 3*s*s*(-s1 + s2 + t2) + s1*s1*(8*s2 + 3*t2) + s1*(2*s2*s2 + 7*s2*t1 - 16*s2*t2 - 3*t2*t2) + s*(3*s1*s1 - 9*s1*s2 - 2*s2*s2 - 3*s2*t1 - 6*s1*t2 + 9*s2*t2 + 3*t2*t2))))/2 - ((-m*m + s - s2 + t1)*(-(mz*mz*(-2*m*m + mz*mz - s + 3*s1 + 2*t1 - 3*t2)*(mz*mz - s + s1 - t2)*(mz*mz - s2 + t1 - t2)) + (mz*mz - t2)*((-mz*mz + s2)*pow((mz*mz - s + s1 - t2),2) - mz*mz*(-2*m*m + mz*mz - s + 3*s1 + 2*t1 - 3*t2)*(m*m - s1 - t1 + t2)) + 2*mz*mz*(3*mz*mz*pow((m*m - s1 - t1 + t2),2) + m*m*(3*pow((mz*mz - s + s1 - t2),2) - 2*(mz*mz - s + s1 - t2)*(-m*m + s1 + t1 - t2) + 4*pow((m*m - s1 - t1 + t2),2)))))/4))))/(pow((m*m - s + s2 - t1),2)*pow((mz*mz - s + s1 - t2),2)*pow((m*m - s1 - t1 + t2),2))))/mz*mz;
}

